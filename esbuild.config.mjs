import esbuild from 'esbuild'
import process from 'process'
import builtins from 'builtin-modules'
import copy from 'esbuild-copy-files-plugin'
import { postcssModules, sassPlugin } from 'esbuild-sass-plugin'
import fs from 'fs'
import { replace } from 'esbuild-plugin-replace'

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`

const renamePlugin = (source, target) => ({
    name: 'rename-plugin',
    setup(build) {
        build.onEnd(async () => {
            fs.renameSync(source, target)
        })
    },
})

const prod = process.argv[2] === 'production'
const target = prod ? 'dist' : 'resources/demo-vault/.obsidian/plugins/bookshelf'

const manifest = JSON.parse(fs.readFileSync('manifest.json', 'utf-8'))

const context = await esbuild.context({
    banner: {
        js: banner,
    },
    entryPoints: ['src/obsidian/bookshelf-plugin.ts'],
    bundle: true,
    external: [
        'obsidian',
        'electron',
        '@codemirror/autocomplete',
        '@codemirror/collab',
        '@codemirror/commands',
        '@codemirror/language',
        '@codemirror/lint',
        '@codemirror/search',
        '@codemirror/state',
        '@codemirror/view',
        '@lezer/common',
        '@lezer/highlight',
        '@lezer/lr',
        ...builtins,
    ],
    format: 'cjs',
    target: 'es2018',
    logLevel: 'info',
    sourcemap: prod ? false : 'inline',
    treeShaking: true,
    minify: prod,
    outfile: `${target}/main.js`,
    loader: { '.json': 'file' },
    assetNames: '[name]',
    plugins: [
        sassPlugin({
            filter: /\.module\.scss$/,
            transform: postcssModules({
                baseDir: 'cwd',
                generateScopedName: 'bookshelf--[name]--[local]--[hash:base64:5]',
            }),
        }),
        copy({
            source: ['manifest.json'],
            target,
            copyWithFolder: false,
        }),
        renamePlugin(`./${target}/main.css`, `./${target}/styles.css`),
        replace({ __bookshelf_plugin_version__: manifest.version }),
    ],
})

if (prod) {
    await context.rebuild()
    process.exit(0)
} else {
    await context.watch()
}
